= render 'shared/nav'

-# TODO: Get a frontend management tool and require datatables more nicely
%link{rel: "stylesheet", type: "text/css", href: "https://cdn.datatables.net/v/dt/dt-1.10.13/cr-1.3.2/fh-3.1.2/kt-2.2.0/se-1.2.0/datatables.css"}
%script{type: "text/javascript", src: "https://cdn.datatables.net/v/dt/dt-1.10.13/cr-1.3.2/fh-3.1.2/kt-2.2.0/se-1.2.0/datatables.js"}

%main
  .section.no-pad-bot{id: 'index-banner'}
    .container
      %h1.header.center.orange-text
        Persona Advanced Search

      .row
        .col.s3
          %h5 Categories
          %hr
          %ul
            %li Level
            %li Arcana
            %li Affinities
            %li Skills?
            %li Stats?

        .col.s9
          .row
            %h5 Level
            %form#level_form
              = check_box_tag :level_filter
              = label_tag :level_filter, 'Enabled'
              %br
              Persona's level should be
              %br
              -#%br
              = radio_button_tag :level_rel, '<', false, id: 'level_lt'
              = label_tag :level_lt, 'below ( < )'
              = radio_button_tag :level_rel, '<=', false, id: 'level_lte'
              = label_tag :level_lte, 'at most ( <= )'
              = radio_button_tag :level_rel, '=', false, id: 'level_eq'
              = label_tag :level_eq, 'exactly ( = )'
              = radio_button_tag :level_rel, '>=', false, id: 'level_gte'
              = label_tag :level_gte, 'at least ( >= )'
              = radio_button_tag :level_rel, '>', false, id: 'level_gt'
              = label_tag :level_gt, 'above ( > )'
              .input-field
                = text_field_tag :level, nil, maxlength:3, placeholder: '1-100', pattern: '\d{1,3}', class: 'col s2'

          .row.col.s12.divider

          .row
            %h5 Arcana
            %form#arcana_form
              = check_box_tag :arcana_filter
              = label_tag :arcana_filter, 'Enabled'
              %br
              Persona's arcana should be any of:
              %br
              %br
              - Arcana.all.each do |a|
                = check_box_tag 'arcana[]', a.name, false, id: "arcana_#{a.name}"
                = label_tag "arcana_#{a.name}", a.name

          .row.col.s12.divider

          .row
            %h5 Affinities
            %form#affinities_form
              = check_box_tag :affinities_filter
              = label_tag :affinities_filter, 'Enabled'
              %br
              = radio_button_tag :affinities_rel, 'and', false, id: 'affinities_rel_and'
              = label_tag :affinities_rel_and, 'Match ALL of the following (ANDs)'
              = radio_button_tag :affinities_rel, 'or', false, id: 'affinities_rel_or'
              = label_tag :affinities_rel_or, 'Match ANY of the following (ORs)'
              %br
              Persona should:
              %br
              %br
              = @affinity_relations_tag = select_tag 'affinity_rel[]', options_from_collection_for_select(PersonaSearchHelper.effects_map, 'effect', 'string'), class: 'col s6'
              = @affinity_values_tag = select_tag 'affinity_val[]', options_for_select(Element.basic.pluck(:name)), class: 'col s6'
              %button#add_affinity.btn.waves-effect.waves-light{type: 'button'}
                Add affinity

              :javascript
                $(function(){
                  $('#add_affinity').on('click', function() {
                    var $relations = $('#{@affinity_relations_tag.gsub(/\n/, '')}');
                    var $values = $('#{@affinity_values_tag.gsub(/\n/, '')}');
                    $relations.insertBefore(this);
                    $relations.material_select();
                    $values.insertBefore(this);
                    $values.material_select();
                  });
                });


          .row.col.s12.divider

          .row
            %h5 TODO skills (Persona should have the following innate skills)

          -#.row
          -#  Select Personas that are strong against:
          -#  %form{action: ""}
          -#    %select#affinities{name: 'affinities', multiple: true}
          -#      - Element.all.each do |e|
          -#        %option{value: e.name}
          -#          =e.name
          -#
          -#    %button.btn.waves-effect.waves-light{type: 'submit'}
          -#      Submit

          .row
            .center
              %button#submit.btn-large.waves-effect.waves-light
                SUBMIT
                %i.material-icons.right
                  send

      -if @personas.present?
        .row
        .col.s12
          %table.striped{id: 'personas'}
            %thead
              %tr
                %th.center Name
                %th.center Arcana
                %th.center Level
                %th.center Strong against
            %tbody
              - @personas.each do |persona|
                %tr
                  %td.center= link_to(persona.name, persona)
                  - #TODO: Enable arcana routing for Arcana links to work
                  -#%td.center= link_to(persona.arcana.name, persona.arcana)
                  %td.center= persona.arcana.name
                  %td.center= persona.level
                  %td.center= persona.strengths.map {|a| a.element.name}.join(', ')

        - content_for :bottom do
          :javascript
            $(function(){
              $('#personas').DataTable({
                //Options
                paging: false,
                pageLength: -1,
                //Plugins
                colReorder: true,
                fixedHeader: true,
                // keys: true,
                // select: true
              });
            });

= render 'shared/footer'

:javascript
    $(function(){
      $('select').material_select();

      var sections = ['level', 'arcana', 'affinities'];

      //Auto-enable each section when their inputs change
      sections.forEach(function(section) {
        var $form = $('#' + section + '_form');
        $form.on('change', 'input[name!='+section+'_filter],select', function() {
          $form.find('#' + section + '_filter').prop('checked', $form.serialize() !== section+'_filter=1');
        });
      });

      $('#submit').on('click', function() {
          //Gather all data
          var data = '';
          sections.forEach(function(section) {
            var $form = $('#' + section + '_form');
            if($form.find('#' + section + '_filter').is(':checked')) {
              data += (data === '' ? '' : '&') + $form.serialize();
            }
          });
          window.location = '/personas?' + data;
      });
    });
